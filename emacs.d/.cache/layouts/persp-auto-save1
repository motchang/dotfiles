;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "050_helm.el" "/Users/i.kouji.okamoto/src/dotfiles/emacs.d/conf/lisp/050_helm.el" emacs-lisp-mode) (def-buffer "funcs.el" "/Users/i.kouji.okamoto/.emacs.d/layers/+completion/helm/funcs.el" emacs-lisp-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 4) (min-pixel-width . 20) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 4) (min-pixel-height-safe . 1) (min-pixel-width-safe . 4)) hc (pixel-width . 316) (pixel-height . 82) (total-width . 316) (total-height . 82) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 158) (pixel-height . 82) (total-width . 158) (total-height . 82) (normal-height . 1.0) (normal-width . 0.5) (buffer "050_helm.el" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 51) (start . 1))) (leaf (last . t) (pixel-width . 158) (pixel-height . 82) (total-width . 158) (total-height . 82) (normal-height . 1.0) (normal-width . 0.5) (buffer "funcs.el" (selected) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 5773) (start . 4646))))) (def-params ((term-eyebrowse-last-slot . 1) (term-eyebrowse-current-slot . 1) (term-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 2) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 10) (pixel-height . 10) (total-width . 10) (total-height . 10) (normal-height . 1.0) (normal-width . 1.0) (buffer "*spacemacs*" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 420) (start . 1))) "")))) t nil nil))